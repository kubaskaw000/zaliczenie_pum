{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport MapView from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Location from 'expo-location';\nimport { auth } from \"../firebase\";\nimport Constants from 'expo-constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeMap() {\n  var _location$coords$lati, _location$coords$long;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS === 'android' && !Constants.isDevice)) {\n                _context.next = 3;\n                break;\n              }\n\n              setErrorMsg('Oops, this will not work on Snack in an Android emulator. Try it on your device!');\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 5:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 10;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 10:\n              Location.watchPositionAsync({\n                accuracy: Location.Accuracy.Highest,\n                dianceInterval: 0\n              }, function (loc) {\n                return setLocation(loc);\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var text = 'Waiting..';\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n    console.log(text);\n  }\n\n  var navigation = useNavigation();\n\n  var handleSignOut = function handleSignOut() {\n    auth.signOut().then(function () {\n      navigation.replace(\"Login\");\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: handleSignOut,\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: text\n      })\n    }), _jsx(MapView, {\n      style: styles.map,\n      children: _jsx(MapView.Marker, {\n        title: \"YIKES, Inc.\",\n        description: \"Web Design and Development\",\n        coordinate: {\n          \"latitude\": (_location$coords$lati = location == null ? void 0 : location.coords.latitude) != null ? _location$coords$lati : 50.144,\n          \"longitude\": (_location$coords$long = location == null ? void 0 : location.coords.longitude) != null ? _location$coords$long : 22.52\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    position: \"relative\",\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  },\n  button: {\n    position: \"absolute\",\n    width: 100,\n    height: 100,\n    top: Dimensions.get('window').height / 2 - 50,\n    left: Dimensions.get('window').width / 2 - 50,\n    zIndex: 10\n  },\n  buttonText: {\n    position: 'absolute',\n    backgroundColor: 'red',\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["E:/aplikacja_mobilna/pum_zal/screens/HomeMap.js"],"names":["React","useState","useEffect","MapView","useNavigation","Location","auth","Constants","HomeMap","location","setLocation","errorMsg","setErrorMsg","Platform","OS","isDevice","requestForegroundPermissionsAsync","status","watchPositionAsync","accuracy","Accuracy","Highest","dianceInterval","loc","text","JSON","stringify","console","log","navigation","handleSignOut","signOut","then","replace","catch","error","alert","message","styles","container","button","buttonText","map","coords","latitude","longitude","StyleSheet","create","position","flex","backgroundColor","alignItems","justifyContent","width","Dimensions","get","height","top","left","zIndex","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MapView from 'react-native-maps';\r\nimport { StyleSheet, Text, View, Dimensions, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport * as Location from 'expo-location';\r\nimport { auth } from '../firebase'\r\nimport Constants from 'expo-constants';\r\n\r\n\r\nexport default function HomeMap() {\r\n\r\n\r\n\r\n    const [location, setLocation] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (Platform.OS === 'android' && !Constants.isDevice) {\r\n                setErrorMsg(\r\n                    'Oops, this will not work on Snack in an Android emulator. Try it on your device!'\r\n                );\r\n                return;\r\n            }\r\n            let { status } = await Location.requestForegroundPermissionsAsync();\r\n            if (status !== 'granted') {\r\n                setErrorMsg('Permission to access location was denied');\r\n                return;\r\n            }\r\n\r\n            // let location = await Location.getCurrentPositionAsync({});\r\n            // setLocation(location);\r\n\r\n            Location.watchPositionAsync({ accuracy: Location.Accuracy.Highest, dianceInterval: 0 }, (loc) => setLocation(loc));\r\n        })();\r\n    }, []);\r\n\r\n    let text = 'Waiting..';\r\n    if (errorMsg) {\r\n        text = errorMsg;\r\n    } else if (location) {\r\n        text = JSON.stringify(location);\r\n        console.log(text)\r\n    }\r\n\r\n    const navigation = useNavigation()\r\n\r\n    const handleSignOut = () => {\r\n        auth\r\n            .signOut()\r\n            .then(() => {\r\n                navigation.replace(\"Login\")\r\n            })\r\n            .catch(error => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <TouchableOpacity\r\n                onPress={handleSignOut}\r\n                style={styles.button}\r\n            >\r\n                <Text style={styles.buttonText}>{text}</Text>\r\n            </TouchableOpacity>\r\n            <MapView style={styles.map}>\r\n\r\n\r\n                <MapView.Marker\r\n                    title=\"YIKES, Inc.\"\r\n                    description=\"Web Design and Development\"\r\n                    coordinate={{\r\n                        \"latitude\": location?.coords.latitude ?? 50.144, \"longitude\": location?.coords.longitude ?? 22.52\r\n                    }}\r\n\r\n                />\r\n            </MapView>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n\r\n        position: \"relative\",\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    map: {\r\n        width: Dimensions.get('window').width,\r\n        height: Dimensions.get('window').height,\r\n    },\r\n    button: {\r\n        position: \"absolute\",\r\n        width: 100,\r\n        height: 100,\r\n        top: Dimensions.get('window').height / 2 - 50,\r\n        left: Dimensions.get('window').width / 2 - 50,\r\n        zIndex: 10\r\n\r\n    },\r\n    buttonText: {\r\n        position: 'absolute',\r\n        backgroundColor: 'red',\r\n        color: 'white',\r\n        fontWeight: '700',\r\n        fontSize: 30,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}