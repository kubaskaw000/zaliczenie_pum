{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth, db } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar setUserLocation = function setUserLocation(userId) {\n  var locations;\n  return _regeneratorRuntime.async(function setUserLocation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          locations = db.collection('locations');\n          alert(1);\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(locations.add({\n            uid: userId,\n            location: '123'\n          }));\n\n        case 5:\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          alert(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace(\"HomeMap\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleSignUp = function handleSignUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Registered with:', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    return _regeneratorRuntime.async(function handleLogin$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n              var user = userCredentials.user;\n\n              try {\n                setUserLocation(user.uid);\n              } catch (err) {}\n\n              console.log('Logged in with:', user.email);\n            }).catch(function (error) {\n              return alert(error.message);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleLogin,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSignUp,\n        style: [styles.button, styles.buttonOutline],\n        children: _jsx(Text, {\n          style: styles.buttonOutlineText,\n          children: \"Register\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["E:/aplikacja_mobilna/pum_zal/screens/LoginScreen.js"],"names":["useNavigation","React","useEffect","useState","auth","db","setUserLocation","userId","locations","collection","alert","add","uid","location","LoginScreen","email","setEmail","password","setPassword","navigation","unsubscribe","onAuthStateChanged","user","replace","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","error","message","handleLogin","signInWithEmailAndPassword","err","styles","container","inputContainer","text","input","buttonContainer","button","buttonText","buttonOutline","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native'\nimport React, { useEffect, useState } from 'react'\nimport { KeyboardAvoidingView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\nimport { auth, db } from '../firebase'\n\nconst setUserLocation = async (userId) => {\n\n  try {\n    const locations = db.collection('locations');\n\n    alert(1)\n    await locations.add({\n      uid: userId, location: '123'\n    });\n\n  } catch (err) {\n    alert(err)\n  }\n\n\n}\n\nconst LoginScreen = () => {\n\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const navigation = useNavigation()\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        navigation.replace(\"HomeMap\")\n      }\n    })\n\n    return unsubscribe\n  }, [])\n\n  const handleSignUp = () => {\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(userCredentials => {\n        const user = userCredentials.user;\n        console.log('Registered with:', user.email);\n      })\n      .catch(error => alert(error.message))\n  }\n\n  const handleLogin = async () => {\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then(userCredentials => {\n        const user = userCredentials.user;\n        try {\n          setUserLocation(user.uid)\n        } catch (err) {\n\n        }\n        console.log('Logged in with:', user.email);\n      })\n      .catch(error => alert(error.message))\n\n  }\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior=\"padding\"\n    >\n      <View style={styles.inputContainer}>\n        <TextInput\n          placeholder=\"Email\"\n          value={email}\n          onChangeText={text => setEmail(text)}\n          style={styles.input}\n        />\n        <TextInput\n          placeholder=\"Password\"\n          value={password}\n          onChangeText={text => setPassword(text)}\n          style={styles.input}\n          secureTextEntry\n        />\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          onPress={handleLogin}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}>Login</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={handleSignUp}\n          style={[styles.button, styles.buttonOutline]}\n        >\n          <Text style={styles.buttonOutlineText}>Register</Text>\n        </TouchableOpacity>\n      </View>\n    </KeyboardAvoidingView>\n  )\n}\n\nexport default LoginScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5,\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40,\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2,\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}